// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: auth_v2.proto

package authv2

import (
	"context"

	"github.com/ethereum/go-ethereum/portal/zrpc_client/model/rpc_portal/pb/authv2pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthorizationResponse       = authv2pb.AuthorizationResponse
	Empty                       = authv2pb.Empty
	GetAllAuthorizationResponse = authv2pb.GetAllAuthorizationResponse

	AuthV2 interface {
		// getAllAuthorization 获取全部授权信息
		GetAllAuthorization(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetAllAuthorizationResponse, error)
	}

	defaultAuthV2 struct {
		cli zrpc.Client
	}
)

func NewAuthV2(cli zrpc.Client) AuthV2 {
	return &defaultAuthV2{
		cli: cli,
	}
}

// getAllAuthorization 获取全部授权信息
func (m *defaultAuthV2) GetAllAuthorization(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetAllAuthorizationResponse, error) {
	client := authv2pb.NewAuthV2Client(m.cli.Conn())
	return client.GetAllAuthorization(ctx, in, opts...)
}
