// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user_v2.proto

package userv2

import (
	"context"

	"github.com/ethereum/go-ethereum/portal/zrpc_client/model/rpc_portal/pb/userv2pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	GetAllUsersRequest  = userv2pb.GetAllUsersRequest
	GetAllUsersResponse = userv2pb.GetAllUsersResponse
	GetUserInfoResponse = userv2pb.GetUserInfoResponse

	UserV2 interface {
		GetAllUsers(ctx context.Context, in *GetAllUsersRequest, opts ...grpc.CallOption) (*GetAllUsersResponse, error)
	}

	defaultUserV2 struct {
		cli zrpc.Client
	}
)

func NewUserV2(cli zrpc.Client) UserV2 {
	return &defaultUserV2{
		cli: cli,
	}
}

func (m *defaultUserV2) GetAllUsers(ctx context.Context, in *GetAllUsersRequest, opts ...grpc.CallOption) (*GetAllUsersResponse, error) {
	client := userv2pb.NewUserV2Client(m.cli.Conn())
	return client.GetAllUsers(ctx, in, opts...)
}
