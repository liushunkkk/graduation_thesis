// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: rpc_v2.proto

package rpcv2

import (
	"context"

	"github.com/ethereum/go-ethereum/portal/zrpc_client/model/rpc_portal/pb/rpcv2pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty                     = rpcv2pb.Empty
	GetAllRpcInfoListRequest  = rpcv2pb.GetAllRpcInfoListRequest
	GetAllRpcInfoListResponse = rpcv2pb.GetAllRpcInfoListResponse
	GetAllRpcInfoResponse     = rpcv2pb.GetAllRpcInfoResponse
	GetRpcInfoRequest         = rpcv2pb.GetRpcInfoRequest
	GetRpcInfoResponse        = rpcv2pb.GetRpcInfoResponse
	RpcInfoUpdateRequest      = rpcv2pb.RpcInfoUpdateRequest

	Rpcv2 interface {
		// RpcInfoUpdate Rpc设置
		RpcInfoUpdate(ctx context.Context, in *RpcInfoUpdateRequest, opts ...grpc.CallOption) (*Empty, error)
		// GetRpcInfo 获取Rpc设置
		GetRpcInfo(ctx context.Context, in *GetRpcInfoRequest, opts ...grpc.CallOption) (*GetRpcInfoResponse, error)
		// GetRpcInfoList 获取Rpc设置列表（All）
		GetAllRpcInfoList(ctx context.Context, in *GetAllRpcInfoListRequest, opts ...grpc.CallOption) (*GetAllRpcInfoListResponse, error)
	}

	defaultRpcv2 struct {
		cli zrpc.Client
	}
)

func NewRpcv2(cli zrpc.Client) Rpcv2 {
	return &defaultRpcv2{
		cli: cli,
	}
}

// RpcInfoUpdate Rpc设置
func (m *defaultRpcv2) RpcInfoUpdate(ctx context.Context, in *RpcInfoUpdateRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := rpcv2pb.NewRpcv2Client(m.cli.Conn())
	return client.RpcInfoUpdate(ctx, in, opts...)
}

// GetRpcInfo 获取Rpc设置
func (m *defaultRpcv2) GetRpcInfo(ctx context.Context, in *GetRpcInfoRequest, opts ...grpc.CallOption) (*GetRpcInfoResponse, error) {
	client := rpcv2pb.NewRpcv2Client(m.cli.Conn())
	return client.GetRpcInfo(ctx, in, opts...)
}

// GetRpcInfoList 获取Rpc设置列表（All）
func (m *defaultRpcv2) GetAllRpcInfoList(ctx context.Context, in *GetAllRpcInfoListRequest, opts ...grpc.CallOption) (*GetAllRpcInfoListResponse, error) {
	client := rpcv2pb.NewRpcv2Client(m.cli.Conn())
	return client.GetAllRpcInfoList(ctx, in, opts...)
}
