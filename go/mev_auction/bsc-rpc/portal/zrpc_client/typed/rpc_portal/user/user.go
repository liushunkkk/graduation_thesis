// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: user.proto

package user

import (
	"context"

	"github.com/ethereum/go-ethereum/portal/zrpc_client/model/rpc_portal/pb/userpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	Empty                     = userpb.Empty
	GetUserInfoResponse       = userpb.GetUserInfoResponse
	UserActiveRequest         = userpb.UserActiveRequest
	UserActiveResponse        = userpb.UserActiveResponse
	UserLoginRequest          = userpb.UserLoginRequest
	UserLoginResponse         = userpb.UserLoginResponse
	UserRefreshTokenRequest   = userpb.UserRefreshTokenRequest
	UserRegisterRequest       = userpb.UserRegisterRequest
	UserResetPasswordRequest  = userpb.UserResetPasswordRequest
	UserResetPasswordResponse = userpb.UserResetPasswordResponse

	User interface {
		// UserRegister 用户注册接口
		UserRegister(ctx context.Context, in *UserRegisterRequest, opts ...grpc.CallOption) (*Empty, error)
		// UserActive 用户激活接口
		UserActive(ctx context.Context, in *UserActiveRequest, opts ...grpc.CallOption) (*UserActiveResponse, error)
		// UserLogin 用户登录接口
		UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error)
		// UserRefreshToken 用户刷新token接口
		UserRefreshToken(ctx context.Context, in *UserRefreshTokenRequest, opts ...grpc.CallOption) (*Empty, error)
		// GetUserInfo 获取用户信息接口
		GetUserInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetUserInfoResponse, error)
		// resetEmail 重置邮箱
		ResetEmail(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
		// UserResetPassword 用户重置密码接口
		UserResetPassword(ctx context.Context, in *UserResetPasswordRequest, opts ...grpc.CallOption) (*UserResetPasswordResponse, error)
		// UserLogout 用户登出接口
		UserLogout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultUser struct {
		cli zrpc.Client
	}
)

func NewUser(cli zrpc.Client) User {
	return &defaultUser{
		cli: cli,
	}
}

// UserRegister 用户注册接口
func (m *defaultUser) UserRegister(ctx context.Context, in *UserRegisterRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.UserRegister(ctx, in, opts...)
}

// UserActive 用户激活接口
func (m *defaultUser) UserActive(ctx context.Context, in *UserActiveRequest, opts ...grpc.CallOption) (*UserActiveResponse, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.UserActive(ctx, in, opts...)
}

// UserLogin 用户登录接口
func (m *defaultUser) UserLogin(ctx context.Context, in *UserLoginRequest, opts ...grpc.CallOption) (*UserLoginResponse, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.UserLogin(ctx, in, opts...)
}

// UserRefreshToken 用户刷新token接口
func (m *defaultUser) UserRefreshToken(ctx context.Context, in *UserRefreshTokenRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.UserRefreshToken(ctx, in, opts...)
}

// GetUserInfo 获取用户信息接口
func (m *defaultUser) GetUserInfo(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetUserInfoResponse, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.GetUserInfo(ctx, in, opts...)
}

// resetEmail 重置邮箱
func (m *defaultUser) ResetEmail(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.ResetEmail(ctx, in, opts...)
}

// UserResetPassword 用户重置密码接口
func (m *defaultUser) UserResetPassword(ctx context.Context, in *UserResetPasswordRequest, opts ...grpc.CallOption) (*UserResetPasswordResponse, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.UserResetPassword(ctx, in, opts...)
}

// UserLogout 用户登出接口
func (m *defaultUser) UserLogout(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Empty, error) {
	client := userpb.NewUserClient(m.cli.Conn())
	return client.UserLogout(ctx, in, opts...)
}
