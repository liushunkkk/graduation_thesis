// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: tx_v2.proto

package txv2

import (
	"context"

	"github.com/ethereum/go-ethereum/portal/zrpc_client/model/rpc_portal/pb/txv2pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BundleSaveRequest     = txv2pb.BundleSaveRequest
	DoCountRequest        = txv2pb.DoCountRequest
	Empty                 = txv2pb.Empty
	PageRequest           = txv2pb.PageRequest
	RefundCountResponse   = txv2pb.RefundCountResponse
	RefundData            = txv2pb.RefundData
	RefundListResponse    = txv2pb.RefundListResponse
	RefundResponse        = txv2pb.RefundResponse
	RefundTrendData       = txv2pb.RefundTrendData
	RefundTrendResponse   = txv2pb.RefundTrendResponse
	ToBRefundListRequest  = txv2pb.ToBRefundListRequest
	ToBRefundListResponse = txv2pb.ToBRefundListResponse
	ToBRefundViewRequest  = txv2pb.ToBRefundViewRequest
	ToBRefundViewResponse = txv2pb.ToBRefundViewResponse
	ToBTxListRequest      = txv2pb.ToBTxListRequest
	ToBTxListResponse     = txv2pb.ToBTxListResponse
	TxCountRequest        = txv2pb.TxCountRequest
	TxCountResponse       = txv2pb.TxCountResponse
	TxListRequest         = txv2pb.TxListRequest
	TxListResponse        = txv2pb.TxListResponse
	TxResponse            = txv2pb.TxResponse
	TxTrendData           = txv2pb.TxTrendData
	TxTrendRequest        = txv2pb.TxTrendRequest
	TxTrendResponse       = txv2pb.TxTrendResponse
	TxsData               = txv2pb.TxsData

	Txv2 interface {
		// ToBTxList
		ToBTxList(ctx context.Context, in *ToBTxListRequest, opts ...grpc.CallOption) (*ToBTxListResponse, error)
		// ToBRefundList
		ToBRefundList(ctx context.Context, in *ToBRefundListRequest, opts ...grpc.CallOption) (*ToBRefundListResponse, error)
		// ToBRefundList
		ToBRefundView(ctx context.Context, in *ToBRefundViewRequest, opts ...grpc.CallOption) (*ToBRefundViewResponse, error)
		// BundleSave 保存bundle信息
		BundleSave(ctx context.Context, in *BundleSaveRequest, opts ...grpc.CallOption) (*Empty, error)
		// TxList 获取交易列表
		TxList(ctx context.Context, in *TxListRequest, opts ...grpc.CallOption) (*TxListResponse, error)
		// TxCount 获取交易汇总
		TxCount(ctx context.Context, in *TxCountRequest, opts ...grpc.CallOption) (*TxCountResponse, error)
		// TxTrend 获取交易趋势
		TxTrend(ctx context.Context, in *TxTrendRequest, opts ...grpc.CallOption) (*TxTrendResponse, error)
		// RefundList 获取返利列表
		RefundList(ctx context.Context, in *TxListRequest, opts ...grpc.CallOption) (*RefundListResponse, error)
		// RefundCount 获取返利汇总
		RefundCount(ctx context.Context, in *TxCountRequest, opts ...grpc.CallOption) (*RefundCountResponse, error)
		// RefundTrend 获取返利趋势
		RefundTrend(ctx context.Context, in *TxTrendRequest, opts ...grpc.CallOption) (*RefundTrendResponse, error)
		// DoCount 执行统计任务
		DoCount(ctx context.Context, in *DoCountRequest, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultTxv2 struct {
		cli zrpc.Client
	}
)

func NewTxv2(cli zrpc.Client) Txv2 {
	return &defaultTxv2{
		cli: cli,
	}
}

// ToBTxList
func (m *defaultTxv2) ToBTxList(ctx context.Context, in *ToBTxListRequest, opts ...grpc.CallOption) (*ToBTxListResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.ToBTxList(ctx, in, opts...)
}

// ToBRefundList
func (m *defaultTxv2) ToBRefundList(ctx context.Context, in *ToBRefundListRequest, opts ...grpc.CallOption) (*ToBRefundListResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.ToBRefundList(ctx, in, opts...)
}

// ToBRefundList
func (m *defaultTxv2) ToBRefundView(ctx context.Context, in *ToBRefundViewRequest, opts ...grpc.CallOption) (*ToBRefundViewResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.ToBRefundView(ctx, in, opts...)
}

// BundleSave 保存bundle信息
func (m *defaultTxv2) BundleSave(ctx context.Context, in *BundleSaveRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.BundleSave(ctx, in, opts...)
}

// TxList 获取交易列表
func (m *defaultTxv2) TxList(ctx context.Context, in *TxListRequest, opts ...grpc.CallOption) (*TxListResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.TxList(ctx, in, opts...)
}

// TxCount 获取交易汇总
func (m *defaultTxv2) TxCount(ctx context.Context, in *TxCountRequest, opts ...grpc.CallOption) (*TxCountResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.TxCount(ctx, in, opts...)
}

// TxTrend 获取交易趋势
func (m *defaultTxv2) TxTrend(ctx context.Context, in *TxTrendRequest, opts ...grpc.CallOption) (*TxTrendResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.TxTrend(ctx, in, opts...)
}

// RefundList 获取返利列表
func (m *defaultTxv2) RefundList(ctx context.Context, in *TxListRequest, opts ...grpc.CallOption) (*RefundListResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.RefundList(ctx, in, opts...)
}

// RefundCount 获取返利汇总
func (m *defaultTxv2) RefundCount(ctx context.Context, in *TxCountRequest, opts ...grpc.CallOption) (*RefundCountResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.RefundCount(ctx, in, opts...)
}

// RefundTrend 获取返利趋势
func (m *defaultTxv2) RefundTrend(ctx context.Context, in *TxTrendRequest, opts ...grpc.CallOption) (*RefundTrendResponse, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.RefundTrend(ctx, in, opts...)
}

// DoCount 执行统计任务
func (m *defaultTxv2) DoCount(ctx context.Context, in *DoCountRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := txv2pb.NewTxv2Client(m.cli.Conn())
	return client.DoCount(ctx, in, opts...)
}
