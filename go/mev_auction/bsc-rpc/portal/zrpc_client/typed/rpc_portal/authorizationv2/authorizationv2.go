// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: authorization_v2.proto

package authorizationv2

import (
	"context"

	"github.com/ethereum/go-ethereum/portal/zrpc_client/model/rpc_portal/pb/authorizationv2pb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	AuthorizationResponse       = authorizationv2pb.AuthorizationResponse
	Empty                       = authorizationv2pb.Empty
	GetAllAuthorizationResponse = authorizationv2pb.GetAllAuthorizationResponse
	SayHelloRequest             = authorizationv2pb.SayHelloRequest
	SayHelloResponse            = authorizationv2pb.SayHelloResponse

	AuthorizationV2 interface {
		// getAllAuthorization 获取全部授权信息
		GetAllAuthorization(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetAllAuthorizationResponse, error)
	}

	defaultAuthorizationV2 struct {
		cli zrpc.Client
	}
)

func NewAuthorizationV2(cli zrpc.Client) AuthorizationV2 {
	return &defaultAuthorizationV2{
		cli: cli,
	}
}

// getAllAuthorization 获取全部授权信息
func (m *defaultAuthorizationV2) GetAllAuthorization(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*GetAllAuthorizationResponse, error) {
	client := authorizationv2pb.NewAuthorizationV2Client(m.cli.Conn())
	return client.GetAllAuthorization(ctx, in, opts...)
}
