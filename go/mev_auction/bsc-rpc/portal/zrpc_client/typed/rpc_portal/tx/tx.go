// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.2
// Source: tx.proto

package tx

import (
	"context"

	"github.com/ethereum/go-ethereum/portal/zrpc_client/model/rpc_portal/pb/txpb"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	BundleSaveRequest   = txpb.BundleSaveRequest
	DoCountRequest      = txpb.DoCountRequest
	Empty               = txpb.Empty
	PageRequest         = txpb.PageRequest
	RefundCountResponse = txpb.RefundCountResponse
	RefundData          = txpb.RefundData
	RefundListResponse  = txpb.RefundListResponse
	RefundResponse      = txpb.RefundResponse
	RefundTrendData     = txpb.RefundTrendData
	RefundTrendResponse = txpb.RefundTrendResponse
	TxCountRequest      = txpb.TxCountRequest
	TxCountResponse     = txpb.TxCountResponse
	TxListRequest       = txpb.TxListRequest
	TxListResponse      = txpb.TxListResponse
	TxResponse          = txpb.TxResponse
	TxTrendData         = txpb.TxTrendData
	TxTrendRequest      = txpb.TxTrendRequest
	TxTrendResponse     = txpb.TxTrendResponse

	Tx interface {
		// BundleSave 保存bundle信息
		BundleSave(ctx context.Context, in *BundleSaveRequest, opts ...grpc.CallOption) (*Empty, error)
		// TxList 获取交易列表
		TxList(ctx context.Context, in *TxListRequest, opts ...grpc.CallOption) (*TxListResponse, error)
		// TxCount 获取交易汇总
		TxCount(ctx context.Context, in *TxCountRequest, opts ...grpc.CallOption) (*TxCountResponse, error)
		// TxTrend 获取交易趋势
		TxTrend(ctx context.Context, in *TxTrendRequest, opts ...grpc.CallOption) (*TxTrendResponse, error)
		// RefundList 获取返利列表
		RefundList(ctx context.Context, in *TxListRequest, opts ...grpc.CallOption) (*RefundListResponse, error)
		// RefundCount 获取返利汇总
		RefundCount(ctx context.Context, in *TxCountRequest, opts ...grpc.CallOption) (*RefundCountResponse, error)
		// RefundTrend 获取返利趋势
		RefundTrend(ctx context.Context, in *TxTrendRequest, opts ...grpc.CallOption) (*RefundTrendResponse, error)
		// DoCount 执行统计任务
		DoCount(ctx context.Context, in *DoCountRequest, opts ...grpc.CallOption) (*Empty, error)
	}

	defaultTx struct {
		cli zrpc.Client
	}
)

func NewTx(cli zrpc.Client) Tx {
	return &defaultTx{
		cli: cli,
	}
}

// BundleSave 保存bundle信息
func (m *defaultTx) BundleSave(ctx context.Context, in *BundleSaveRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := txpb.NewTxClient(m.cli.Conn())
	return client.BundleSave(ctx, in, opts...)
}

// TxList 获取交易列表
func (m *defaultTx) TxList(ctx context.Context, in *TxListRequest, opts ...grpc.CallOption) (*TxListResponse, error) {
	client := txpb.NewTxClient(m.cli.Conn())
	return client.TxList(ctx, in, opts...)
}

// TxCount 获取交易汇总
func (m *defaultTx) TxCount(ctx context.Context, in *TxCountRequest, opts ...grpc.CallOption) (*TxCountResponse, error) {
	client := txpb.NewTxClient(m.cli.Conn())
	return client.TxCount(ctx, in, opts...)
}

// TxTrend 获取交易趋势
func (m *defaultTx) TxTrend(ctx context.Context, in *TxTrendRequest, opts ...grpc.CallOption) (*TxTrendResponse, error) {
	client := txpb.NewTxClient(m.cli.Conn())
	return client.TxTrend(ctx, in, opts...)
}

// RefundList 获取返利列表
func (m *defaultTx) RefundList(ctx context.Context, in *TxListRequest, opts ...grpc.CallOption) (*RefundListResponse, error) {
	client := txpb.NewTxClient(m.cli.Conn())
	return client.RefundList(ctx, in, opts...)
}

// RefundCount 获取返利汇总
func (m *defaultTx) RefundCount(ctx context.Context, in *TxCountRequest, opts ...grpc.CallOption) (*RefundCountResponse, error) {
	client := txpb.NewTxClient(m.cli.Conn())
	return client.RefundCount(ctx, in, opts...)
}

// RefundTrend 获取返利趋势
func (m *defaultTx) RefundTrend(ctx context.Context, in *TxTrendRequest, opts ...grpc.CallOption) (*RefundTrendResponse, error) {
	client := txpb.NewTxClient(m.cli.Conn())
	return client.RefundTrend(ctx, in, opts...)
}

// DoCount 执行统计任务
func (m *defaultTx) DoCount(ctx context.Context, in *DoCountRequest, opts ...grpc.CallOption) (*Empty, error) {
	client := txpb.NewTxClient(m.cli.Conn())
	return client.DoCount(ctx, in, opts...)
}
